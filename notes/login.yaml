After logging in with twitch, redirect to backend.url/authenticate?code=<the code from twitch>

backend.url/authenticate:
  - ?code=<the code from twitch>

function authenticateWithTwitch:
  - calls twitchAPI.getAccessToken(code)
  - calls twitchAPI.validateAccessToken(access_token)
  - calls twitchAPI.getUserById(access_token, twitch_id)
  - calls mongoDB.saveUser({user object})
  - Example return to client:
    {
      "connected": false,
      "_id": "600482329cc9a36b5b14bd4c",
      "twitch_id": "115415445",
      "createdAt": "2021-01-17T18:30:12.079Z",
      "display_name": "pookiepew",
      "login": "pookiepew",
      "profile_image_url": "https://static-cdn.jtvnw.net/jtv_user_pictures/8feac4b0-22a9-49cd-a8d5-d6075d8edc20-profile_image-300x300.png",
      "refresh_token": "TOKEN",
      "updatedAt": "2021-01-17T18:30:12.079Z",
      "access_token": "TOKEN"
    }
  
If client is a viewer, they can use access_token to connect to twitch with tmi.js

if client is a streamer, they should call backend.url/bot/initialize

backend.url/bot/initialize:
  - ?login=<LOGIN>
  - &access_token=<TOKEN>
  - &channel=<CHANNEL>

function initializeBot: 
  - calls bot.connect(login, access_token, channel)
  - Example response:
    {
      "shouldBeConnected": true,
      "_id": "60048bc41b4590302018c8cb",
      "twitch_id": "115415445",
      "createdAt": "2021-01-17T18:30:12.079Z",
      "display_name": "pookiepew",
      "login": "pookiepew",
      "profile_image_url": "https://static-cdn.jtvnw.net/jtv_user_pictures/8feac4b0-22a9-49cd-a8d5-d6075d8edc20-profile_image-300x300.png",
      "refresh_token": "TOKEN",
      "updatedAt": "2021-01-17T20:38:57.722Z"
    }


function twitchAPI.getAccessToken(code):
